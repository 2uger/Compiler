program   :: declList
declList  :: decl declList | E
decl      :: varDecl | funcDecl

varDecl       :: 'var' typeSpec varDeclInit ';'
typeSpec      :: 'int' | 'bool' | 'char'
varDeclInit   :: varDeclId | varDeclId '=' simpleExpr
varDeclId     :: ID | ID '[' NUMCONST ']'

funcDecl     :: 'func' typeSpec ID '(' parms ')' stmt
parms        :: parmList | 'E'
parmList     :: parmType parmListN
parmListN    :: 'E' | ',' parmType parmListN
parmType     :: typeSpec ID

stmt         :: exprStmt | compoundStmt | returnStmt | 'E'
exprStmt     :: expr ';' | ';'
compoundStmt :: '{' stmtList '}'
stmtList     :: stmt StmtList | 'E'
returnStmt   :: 'return' ';' | 'return' exp ';'

expr    :: ID '=' expr | 'ID' ++ | 'ID' --
